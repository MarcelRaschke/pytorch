graph(%x : Float(*, *)
      %hx : Float(*, *)
      %cx : Float(*, *)
      %w_ih : Float(*, *)
      %w_hh : Float(*, *)
      %b_ih : Float(*)
      %b_hh : Float(*)) {
  %7 : Float(*, *), %8 : Float(*, *) = prim::DifferentiableGraph_0(%w_ih, %x, %w_hh, %hx, %b_ih, %b_hh, %cx)
  return (%8, %7);
}
with prim::DifferentiableGraph_0 = graph(%0 : Float(*, *)
      %1 : Float(*, *)
      %2 : Float(*, *)
      %3 : Float(*, *)
      %4 : Float(*)
      %5 : Float(*)
      %6 : Float(*, *)) {
  %7 : Float(*, *) = aten::t(%0)
  %8 : Float(*, *) = aten::mm(%1, %7)
  %9 : Float(*, *) = aten::t(%2)
  %10 : Float(*, *) = aten::mm(%3, %9)
  %11 : int = prim::Constant[value=1]()
  %12 : Float(*, *) = prim::FusionGroup_0(%4, %8, %10)
  %13 : Dynamic[] = prim::ListConstruct(%12, %5)
  %14 : Dynamic[] = aten::broadcast_tensors(%13)
  %15 : Dynamic, %16 : Dynamic = prim::ListUnpack(%14)
  %hy : Float(*, *), %18 : Float(*, *), %cy : Float(*, *), %outgate.1 : Float(*, *), %cellgate.1 : Float(*, *), %forgetgate.1 : Float(*, *), %ingate.1 : Float(*, *) = prim::FusionGroup_1(%6, %16, %15)
  return (%cy, %hy, %7, %9, %ingate.1, %forgetgate.1, %cellgate.1, %outgate.1, %18);
}
with prim::FusionGroup_0 = graph(%0 : Float(*)
      %1 : Float(*, *)
      %2 : Float(*, *)) {
  %3 : int = prim::Constant[value=1]()
  %4 : Float(*, *) = aten::add(%1, %2, %3)
  %5 : int = prim::Constant[value=1]()
  %6 : Float(*, *) = aten::add(%4, %0, %5)
  return (%6);
}
with prim::FusionGroup_1 = graph(%0 : Float(*, *)
      %1 : Dynamic
      %2 : Dynamic) {
  %3 : Float(*, *), %4 : Float(*, *), %5 : Float(*, *), %6 : Float(*, *) = prim::ConstantChunk[chunks=4, dim=1](%2)
  %7 : Float(*, *), %8 : Float(*, *), %9 : Float(*, *), %10 : Float(*, *) = prim::ConstantChunk[chunks=4, dim=1](%1)
  %11 : int = prim::Constant[value=1]()
  %12 : Float(*, *) = aten::add(%3, %7, %11)
  %13 : int = prim::Constant[value=1]()
  %14 : Float(*, *) = aten::add(%4, %8, %13)
  %15 : int = prim::Constant[value=1]()
  %16 : Float(*, *) = aten::add(%5, %9, %15)
  %17 : int = prim::Constant[value=1]()
  %18 : Float(*, *) = aten::add(%6, %10, %17)
  %ingate.1 : Float(*, *) = aten::sigmoid(%12)
  %forgetgate.1 : Float(*, *) = aten::sigmoid(%14)
  %cellgate.1 : Float(*, *) = aten::tanh(%16)
  %outgate.1 : Float(*, *) = aten::sigmoid(%18)
  %23 : Float(*, *) = aten::mul(%forgetgate.1, %0)
  %24 : Float(*, *) = aten::mul(%ingate.1, %cellgate.1)
  %25 : int = prim::Constant[value=1]()
  %cy : Float(*, *) = aten::add(%23, %24, %25)
  %27 : Float(*, *) = aten::tanh(%cy)
  %hy : Float(*, *) = aten::mul(%outgate.1, %27)
  return (%hy, %27, %cy, %outgate.1, %cellgate.1, %forgetgate.1, %ingate.1);
}
