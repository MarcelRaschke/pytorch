graph(%0 : Float(*, *)
      %1 : Float(*, *)
      %2 : Undefined
      %3 : Undefined
      %4 : Undefined
      %5 : Undefined
      %6 : Undefined
      %7 : Undefined
      %8 : Undefined
      %9 : Float(*, *)
      %10 : Float(*, *)
      %11 : Float(*, *)
      %12 : Float(*, *)
      %13 : Float(*, *)
      %ingate : Float(*, *)
      %forgetgate : Float(*, *)
      %cellgate : Float(*, *)
      %outgate : Float(*, *)
      %18 : Float(*, *)) {
  %19 : Float(*, *), %20 : Float(*, *) = prim::FusionGroup_0(%forgetgate, %ingate, %cellgate, %outgate, %9, %1, %18, %0)
  %21 : Float(*, *) = aten::t(%13)
  %22 : Float(*, *) = aten::mm(%20, %21)
  %23 : Float(*, *) = aten::t(%10)
  %24 : Float(*, *) = aten::mm(%23, %20)
  %25 : Float(*, *) = aten::t(%24)
  %26 : Float(*, *) = aten::t(%12)
  %27 : Float(*, *) = aten::mm(%20, %26)
  %28 : Float(*, *) = aten::t(%11)
  %29 : Float(*, *) = aten::mm(%28, %20)
  %30 : Float(*, *) = aten::t(%29)
  return (%19, %20, %20, %22, %25, %27, %30);
}
with prim::FusionGroup_0 = graph(%0 : Float(*, *)
      %1 : Float(*, *)
      %2 : Float(*, *)
      %3 : Float(*, *)
      %4 : Float(*, *)
      %5 : Float(*, *)
      %6 : Float(*, *)
      %7 : Float(*, *)) {
  %8 : Float(*, *) = aten::mul(%7, %6)
  %9 : Float(*, *) = aten::mul(%7, %3)
  %10 : Float(*, *) = aten::mul(%6, %6)
  %11 : Float(*, *) = aten::neg(%10)
  %12 : int = prim::Constant[value=1]()
  %13 : int = prim::Constant[value=1]()
  %14 : Float(*, *) = aten::add(%11, %13, %13)
  %15 : Float(*, *) = aten::mul(%9, %14)
  %16 : int = prim::Constant[value=1]()
  %17 : int = prim::Constant[value=1]()
  %18 : Float(*, *) = aten::add(%5, %15, %17)
  %19 : Float(*, *) = aten::mul(%18, %2)
  %20 : Float(*, *) = aten::mul(%18, %1)
  %21 : Float(*, *) = aten::mul(%18, %4)
  %22 : Float(*, *) = aten::neg(%3)
  %23 : int = prim::Constant[value=1]()
  %24 : int = prim::Constant[value=1]()
  %25 : Float(*, *) = aten::add(%22, %24, %24)
  %26 : Float(*, *) = aten::mul(%25, %3)
  %27 : Float(*, *) = aten::mul(%26, %8)
  %28 : Float(*, *) = aten::mul(%2, %2)
  %29 : Float(*, *) = aten::neg(%28)
  %30 : int = prim::Constant[value=1]()
  %31 : int = prim::Constant[value=1]()
  %32 : Float(*, *) = aten::add(%29, %31, %31)
  %33 : Float(*, *) = aten::mul(%20, %32)
  %34 : Float(*, *) = aten::neg(%0)
  %35 : int = prim::Constant[value=1]()
  %36 : int = prim::Constant[value=1]()
  %37 : Float(*, *) = aten::add(%34, %36, %36)
  %38 : Float(*, *) = aten::mul(%37, %0)
  %39 : Float(*, *) = aten::mul(%38, %21)
  %40 : Float(*, *) = aten::neg(%1)
  %41 : int = prim::Constant[value=1]()
  %42 : int = prim::Constant[value=1]()
  %43 : Float(*, *) = aten::add(%40, %42, %42)
  %44 : Float(*, *) = aten::mul(%43, %1)
  %45 : Float(*, *) = aten::mul(%44, %19)
  %46 : Float(*, *) = prim::FusedConcat[dim=1](%45, %39, %33, %27)
  %47 : Float(*, *) = aten::mul(%18, %0)
  return (%47, %46);
}
